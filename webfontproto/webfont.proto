syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.sdk.webfont";
option java_outer_classname = "WebfontProto";

package webfontsdk;



// The greeting service definition.
service Greeter {
    //BuildFont
    rpc BuildFont(FontBuildRequest) returns (FontBuildBufResult) {}
    //MultBuildFont
    rpc MultBuildFont(MultFontBuildRequest) returns (MultFontBuildBufResult) {}

    //Get my fontlist
    rpc FontList(FontListRequest) returns (FontListResult){}

    //GetProfile
    rpc GetProfileWithoutMap(GetProfileWithoutMapRequest) returns (GetProfileWithoutMapResult) {}


    //GetUnicodeIndexs
    //rpc GetUnicodeIndexs(GetUnicodeIndexsRequest) returns (GetUnicodeIndexsResult) {}

    //GetGlyfs Index
    //rpc GetGlyfsIndex(GetGlyfsIndexRequest) returns (GetGlyfsIndexResult) {}


    //GetGlyfs Unicode
    //rpc GetGlyfsUnicode(GetGlyfsUnicodeRequest) returns (GetGlyfsUnicodeResult) {}

    //GetMultGlyfsUnicode
    rpc GetMultGlyfsUnicode(GetMultGlyfsUnicodeRequest) returns (GetMultGlyfsUnicodeResult) {}
}

message FontListRequest {
    string apikey=1;
}


message FontListResult {
    map<uint32, int64> fonts = 1;
}


message FontBuildRequest {
    string apikey=1;
    uint32 font_id=2;
    string text=3;
    bool need_ttf=4;
    bool need_eot=5;
    bool need_woff=6;
    bool need_woff2=7;
}



message MultFontBuildRequest {
    repeated FontBuildRequest items=1;
}

message FontBuildBufResult {
    uint32 font_id =1 ;
    uint32 font_format_version=2;   //字体格式版本
    uint32 font_checksum=3; //字体的唯一辨识编码
    string name_en = 4;
    bytes bytes_ttf=5;
    bytes bytes_eot=6;
    bytes bytes_woff=7;
    bytes bytes_woff2=8;
}

message MultFontBuildBufResult {
    repeated FontBuildBufResult items = 1;
}


//GetProfile for html5
message GetProfileWithoutMapRequest {
    string apikey=1;
    uint32 font_id=2;
}

message GetProfileWithoutMapResult {
    uint32 font_id=1;
    bytes data=2;
}

/*
message GetUnicodeIndexsRequest {
    string apikey=1;
    uint32 font_id=2;
    uint32 unicode=3;
}

message GetUnicodeIndexsResult {
    repeated uint32 indexs=1;
}


message GetGlyfsIndexRequest {
    string apikey=1;
    uint32 font_id=2;
    uint32 index=3;
}



message GetGlyfsUnicodeRequest {
    string apikey=1;
    uint32 font_id=2;
    uint32 unicode=3;
}

*/

message GetGlyfsIndexResult {
    uint32 index=1;
    bytes data=2;
}

message GetGlyfsUnicodeResult {
    uint32 unicode=1;
    repeated GetGlyfsIndexResult datas = 2;
}


message GetMultGlyfsUnicodeRequest {
    string apikey=1;
    uint32 font_id=2;
    uint32 font_checksum=3;
    repeated uint32 unicodes=4;
}


message indexs {
    repeated uint32 items=2;
}

message GetMultGlyfsUnicodeResult {
    map<uint32,indexs> unicodes=1;
    map<uint32,bytes> indexs=3;
}