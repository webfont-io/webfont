// Code generated by protoc-gen-go. DO NOT EDIT.
// source: webfont.proto

package webfontsdk

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FontListRequest struct {
	Apikey               string   `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty" bson:"apikey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *FontListRequest) Reset()         { *m = FontListRequest{} }
func (m *FontListRequest) String() string { return proto.CompactTextString(m) }
func (*FontListRequest) ProtoMessage()    {}
func (*FontListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{0}
}

func (m *FontListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FontListRequest.Unmarshal(m, b)
}
func (m *FontListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FontListRequest.Marshal(b, m, deterministic)
}
func (m *FontListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FontListRequest.Merge(m, src)
}
func (m *FontListRequest) XXX_Size() int {
	return xxx_messageInfo_FontListRequest.Size(m)
}
func (m *FontListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FontListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FontListRequest proto.InternalMessageInfo

func (m *FontListRequest) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

type FontListResult struct {
	Fonts                map[uint32]int64 `protobuf:"bytes,1,rep,name=fonts,proto3" json:"fonts,omitempty" bson:"fonts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"-"`
	XXX_unrecognized     []byte           `json:"-" bson:"-"`
	XXX_sizecache        int32            `json:"-" bson:"-"`
}

func (m *FontListResult) Reset()         { *m = FontListResult{} }
func (m *FontListResult) String() string { return proto.CompactTextString(m) }
func (*FontListResult) ProtoMessage()    {}
func (*FontListResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{1}
}

func (m *FontListResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FontListResult.Unmarshal(m, b)
}
func (m *FontListResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FontListResult.Marshal(b, m, deterministic)
}
func (m *FontListResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FontListResult.Merge(m, src)
}
func (m *FontListResult) XXX_Size() int {
	return xxx_messageInfo_FontListResult.Size(m)
}
func (m *FontListResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FontListResult.DiscardUnknown(m)
}

var xxx_messageInfo_FontListResult proto.InternalMessageInfo

func (m *FontListResult) GetFonts() map[uint32]int64 {
	if m != nil {
		return m.Fonts
	}
	return nil
}

type FontBuildRequest struct {
	Apikey               string   `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty" bson:"apikey,omitempty"`
	FontId               uint32   `protobuf:"varint,2,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty" bson:"font_id,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty" bson:"text,omitempty"`
	NeedTtf              bool     `protobuf:"varint,4,opt,name=need_ttf,json=needTtf,proto3" json:"need_ttf,omitempty" bson:"need_ttf,omitempty"`
	NeedEot              bool     `protobuf:"varint,5,opt,name=need_eot,json=needEot,proto3" json:"need_eot,omitempty" bson:"need_eot,omitempty"`
	NeedWoff             bool     `protobuf:"varint,6,opt,name=need_woff,json=needWoff,proto3" json:"need_woff,omitempty" bson:"need_woff,omitempty"`
	NeedWoff2            bool     `protobuf:"varint,7,opt,name=need_woff2,json=needWoff2,proto3" json:"need_woff2,omitempty" bson:"need_woff2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *FontBuildRequest) Reset()         { *m = FontBuildRequest{} }
func (m *FontBuildRequest) String() string { return proto.CompactTextString(m) }
func (*FontBuildRequest) ProtoMessage()    {}
func (*FontBuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{2}
}

func (m *FontBuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FontBuildRequest.Unmarshal(m, b)
}
func (m *FontBuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FontBuildRequest.Marshal(b, m, deterministic)
}
func (m *FontBuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FontBuildRequest.Merge(m, src)
}
func (m *FontBuildRequest) XXX_Size() int {
	return xxx_messageInfo_FontBuildRequest.Size(m)
}
func (m *FontBuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FontBuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FontBuildRequest proto.InternalMessageInfo

func (m *FontBuildRequest) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

func (m *FontBuildRequest) GetFontId() uint32 {
	if m != nil {
		return m.FontId
	}
	return 0
}

func (m *FontBuildRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *FontBuildRequest) GetNeedTtf() bool {
	if m != nil {
		return m.NeedTtf
	}
	return false
}

func (m *FontBuildRequest) GetNeedEot() bool {
	if m != nil {
		return m.NeedEot
	}
	return false
}

func (m *FontBuildRequest) GetNeedWoff() bool {
	if m != nil {
		return m.NeedWoff
	}
	return false
}

func (m *FontBuildRequest) GetNeedWoff2() bool {
	if m != nil {
		return m.NeedWoff2
	}
	return false
}

type MultFontBuildRequest struct {
	Items                []*FontBuildRequest `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" bson:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-" bson:"-"`
	XXX_unrecognized     []byte              `json:"-" bson:"-"`
	XXX_sizecache        int32               `json:"-" bson:"-"`
}

func (m *MultFontBuildRequest) Reset()         { *m = MultFontBuildRequest{} }
func (m *MultFontBuildRequest) String() string { return proto.CompactTextString(m) }
func (*MultFontBuildRequest) ProtoMessage()    {}
func (*MultFontBuildRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{3}
}

func (m *MultFontBuildRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultFontBuildRequest.Unmarshal(m, b)
}
func (m *MultFontBuildRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultFontBuildRequest.Marshal(b, m, deterministic)
}
func (m *MultFontBuildRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultFontBuildRequest.Merge(m, src)
}
func (m *MultFontBuildRequest) XXX_Size() int {
	return xxx_messageInfo_MultFontBuildRequest.Size(m)
}
func (m *MultFontBuildRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultFontBuildRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultFontBuildRequest proto.InternalMessageInfo

func (m *MultFontBuildRequest) GetItems() []*FontBuildRequest {
	if m != nil {
		return m.Items
	}
	return nil
}

type FontBuildBufResult struct {
	FontId               uint32   `protobuf:"varint,1,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty" bson:"font_id,omitempty"`
	FontFormatVersion    uint32   `protobuf:"varint,2,opt,name=font_format_version,json=fontFormatVersion,proto3" json:"font_format_version,omitempty" bson:"font_format_version,omitempty"`
	FontChecksum         uint32   `protobuf:"varint,3,opt,name=font_checksum,json=fontChecksum,proto3" json:"font_checksum,omitempty" bson:"font_checksum,omitempty"`
	NameEn               string   `protobuf:"bytes,4,opt,name=name_en,json=nameEn,proto3" json:"name_en,omitempty" bson:"name_en,omitempty"`
	BytesTtf             []byte   `protobuf:"bytes,5,opt,name=bytes_ttf,json=bytesTtf,proto3" json:"bytes_ttf,omitempty" bson:"bytes_ttf,omitempty"`
	BytesEot             []byte   `protobuf:"bytes,6,opt,name=bytes_eot,json=bytesEot,proto3" json:"bytes_eot,omitempty" bson:"bytes_eot,omitempty"`
	BytesWoff            []byte   `protobuf:"bytes,7,opt,name=bytes_woff,json=bytesWoff,proto3" json:"bytes_woff,omitempty" bson:"bytes_woff,omitempty"`
	BytesWoff2           []byte   `protobuf:"bytes,8,opt,name=bytes_woff2,json=bytesWoff2,proto3" json:"bytes_woff2,omitempty" bson:"bytes_woff2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *FontBuildBufResult) Reset()         { *m = FontBuildBufResult{} }
func (m *FontBuildBufResult) String() string { return proto.CompactTextString(m) }
func (*FontBuildBufResult) ProtoMessage()    {}
func (*FontBuildBufResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{4}
}

func (m *FontBuildBufResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FontBuildBufResult.Unmarshal(m, b)
}
func (m *FontBuildBufResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FontBuildBufResult.Marshal(b, m, deterministic)
}
func (m *FontBuildBufResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FontBuildBufResult.Merge(m, src)
}
func (m *FontBuildBufResult) XXX_Size() int {
	return xxx_messageInfo_FontBuildBufResult.Size(m)
}
func (m *FontBuildBufResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FontBuildBufResult.DiscardUnknown(m)
}

var xxx_messageInfo_FontBuildBufResult proto.InternalMessageInfo

func (m *FontBuildBufResult) GetFontId() uint32 {
	if m != nil {
		return m.FontId
	}
	return 0
}

func (m *FontBuildBufResult) GetFontFormatVersion() uint32 {
	if m != nil {
		return m.FontFormatVersion
	}
	return 0
}

func (m *FontBuildBufResult) GetFontChecksum() uint32 {
	if m != nil {
		return m.FontChecksum
	}
	return 0
}

func (m *FontBuildBufResult) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

func (m *FontBuildBufResult) GetBytesTtf() []byte {
	if m != nil {
		return m.BytesTtf
	}
	return nil
}

func (m *FontBuildBufResult) GetBytesEot() []byte {
	if m != nil {
		return m.BytesEot
	}
	return nil
}

func (m *FontBuildBufResult) GetBytesWoff() []byte {
	if m != nil {
		return m.BytesWoff
	}
	return nil
}

func (m *FontBuildBufResult) GetBytesWoff2() []byte {
	if m != nil {
		return m.BytesWoff2
	}
	return nil
}

type MultFontBuildBufResult struct {
	Items                []*FontBuildBufResult `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" bson:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" bson:"-"`
	XXX_unrecognized     []byte                `json:"-" bson:"-"`
	XXX_sizecache        int32                 `json:"-" bson:"-"`
}

func (m *MultFontBuildBufResult) Reset()         { *m = MultFontBuildBufResult{} }
func (m *MultFontBuildBufResult) String() string { return proto.CompactTextString(m) }
func (*MultFontBuildBufResult) ProtoMessage()    {}
func (*MultFontBuildBufResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{5}
}

func (m *MultFontBuildBufResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultFontBuildBufResult.Unmarshal(m, b)
}
func (m *MultFontBuildBufResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultFontBuildBufResult.Marshal(b, m, deterministic)
}
func (m *MultFontBuildBufResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultFontBuildBufResult.Merge(m, src)
}
func (m *MultFontBuildBufResult) XXX_Size() int {
	return xxx_messageInfo_MultFontBuildBufResult.Size(m)
}
func (m *MultFontBuildBufResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MultFontBuildBufResult.DiscardUnknown(m)
}

var xxx_messageInfo_MultFontBuildBufResult proto.InternalMessageInfo

func (m *MultFontBuildBufResult) GetItems() []*FontBuildBufResult {
	if m != nil {
		return m.Items
	}
	return nil
}

//GetProfile for html5
type GetProfileWithoutMapRequest struct {
	Apikey               string   `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty" bson:"apikey,omitempty"`
	FontId               uint32   `protobuf:"varint,2,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty" bson:"font_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetProfileWithoutMapRequest) Reset()         { *m = GetProfileWithoutMapRequest{} }
func (m *GetProfileWithoutMapRequest) String() string { return proto.CompactTextString(m) }
func (*GetProfileWithoutMapRequest) ProtoMessage()    {}
func (*GetProfileWithoutMapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{6}
}

func (m *GetProfileWithoutMapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProfileWithoutMapRequest.Unmarshal(m, b)
}
func (m *GetProfileWithoutMapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProfileWithoutMapRequest.Marshal(b, m, deterministic)
}
func (m *GetProfileWithoutMapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProfileWithoutMapRequest.Merge(m, src)
}
func (m *GetProfileWithoutMapRequest) XXX_Size() int {
	return xxx_messageInfo_GetProfileWithoutMapRequest.Size(m)
}
func (m *GetProfileWithoutMapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProfileWithoutMapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProfileWithoutMapRequest proto.InternalMessageInfo

func (m *GetProfileWithoutMapRequest) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

func (m *GetProfileWithoutMapRequest) GetFontId() uint32 {
	if m != nil {
		return m.FontId
	}
	return 0
}

type GetProfileWithoutMapResult struct {
	FontId               uint32   `protobuf:"varint,1,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty" bson:"font_id,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty" bson:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetProfileWithoutMapResult) Reset()         { *m = GetProfileWithoutMapResult{} }
func (m *GetProfileWithoutMapResult) String() string { return proto.CompactTextString(m) }
func (*GetProfileWithoutMapResult) ProtoMessage()    {}
func (*GetProfileWithoutMapResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{7}
}

func (m *GetProfileWithoutMapResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProfileWithoutMapResult.Unmarshal(m, b)
}
func (m *GetProfileWithoutMapResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProfileWithoutMapResult.Marshal(b, m, deterministic)
}
func (m *GetProfileWithoutMapResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProfileWithoutMapResult.Merge(m, src)
}
func (m *GetProfileWithoutMapResult) XXX_Size() int {
	return xxx_messageInfo_GetProfileWithoutMapResult.Size(m)
}
func (m *GetProfileWithoutMapResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProfileWithoutMapResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetProfileWithoutMapResult proto.InternalMessageInfo

func (m *GetProfileWithoutMapResult) GetFontId() uint32 {
	if m != nil {
		return m.FontId
	}
	return 0
}

func (m *GetProfileWithoutMapResult) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetUnicodeIndexsRequest struct {
	Apikey               string   `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty" bson:"apikey,omitempty"`
	FontId               uint32   `protobuf:"varint,2,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty" bson:"font_id,omitempty"`
	Unicode              uint32   `protobuf:"varint,3,opt,name=unicode,proto3" json:"unicode,omitempty" bson:"unicode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetUnicodeIndexsRequest) Reset()         { *m = GetUnicodeIndexsRequest{} }
func (m *GetUnicodeIndexsRequest) String() string { return proto.CompactTextString(m) }
func (*GetUnicodeIndexsRequest) ProtoMessage()    {}
func (*GetUnicodeIndexsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{8}
}

func (m *GetUnicodeIndexsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUnicodeIndexsRequest.Unmarshal(m, b)
}
func (m *GetUnicodeIndexsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUnicodeIndexsRequest.Marshal(b, m, deterministic)
}
func (m *GetUnicodeIndexsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUnicodeIndexsRequest.Merge(m, src)
}
func (m *GetUnicodeIndexsRequest) XXX_Size() int {
	return xxx_messageInfo_GetUnicodeIndexsRequest.Size(m)
}
func (m *GetUnicodeIndexsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUnicodeIndexsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUnicodeIndexsRequest proto.InternalMessageInfo

func (m *GetUnicodeIndexsRequest) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

func (m *GetUnicodeIndexsRequest) GetFontId() uint32 {
	if m != nil {
		return m.FontId
	}
	return 0
}

func (m *GetUnicodeIndexsRequest) GetUnicode() uint32 {
	if m != nil {
		return m.Unicode
	}
	return 0
}

type GetUnicodeIndexsResult struct {
	Indexs               []uint32 `protobuf:"varint,1,rep,packed,name=indexs,proto3" json:"indexs,omitempty" bson:"indexs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetUnicodeIndexsResult) Reset()         { *m = GetUnicodeIndexsResult{} }
func (m *GetUnicodeIndexsResult) String() string { return proto.CompactTextString(m) }
func (*GetUnicodeIndexsResult) ProtoMessage()    {}
func (*GetUnicodeIndexsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{9}
}

func (m *GetUnicodeIndexsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUnicodeIndexsResult.Unmarshal(m, b)
}
func (m *GetUnicodeIndexsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUnicodeIndexsResult.Marshal(b, m, deterministic)
}
func (m *GetUnicodeIndexsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUnicodeIndexsResult.Merge(m, src)
}
func (m *GetUnicodeIndexsResult) XXX_Size() int {
	return xxx_messageInfo_GetUnicodeIndexsResult.Size(m)
}
func (m *GetUnicodeIndexsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUnicodeIndexsResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetUnicodeIndexsResult proto.InternalMessageInfo

func (m *GetUnicodeIndexsResult) GetIndexs() []uint32 {
	if m != nil {
		return m.Indexs
	}
	return nil
}

type GetGlyfsIndexRequest struct {
	Apikey               string   `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty" bson:"apikey,omitempty"`
	FontId               uint32   `protobuf:"varint,2,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty" bson:"font_id,omitempty"`
	Index                uint32   `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty" bson:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetGlyfsIndexRequest) Reset()         { *m = GetGlyfsIndexRequest{} }
func (m *GetGlyfsIndexRequest) String() string { return proto.CompactTextString(m) }
func (*GetGlyfsIndexRequest) ProtoMessage()    {}
func (*GetGlyfsIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{10}
}

func (m *GetGlyfsIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGlyfsIndexRequest.Unmarshal(m, b)
}
func (m *GetGlyfsIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGlyfsIndexRequest.Marshal(b, m, deterministic)
}
func (m *GetGlyfsIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlyfsIndexRequest.Merge(m, src)
}
func (m *GetGlyfsIndexRequest) XXX_Size() int {
	return xxx_messageInfo_GetGlyfsIndexRequest.Size(m)
}
func (m *GetGlyfsIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlyfsIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlyfsIndexRequest proto.InternalMessageInfo

func (m *GetGlyfsIndexRequest) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

func (m *GetGlyfsIndexRequest) GetFontId() uint32 {
	if m != nil {
		return m.FontId
	}
	return 0
}

func (m *GetGlyfsIndexRequest) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type GetGlyfsIndexResult struct {
	Index                uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty" bson:"index,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty" bson:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetGlyfsIndexResult) Reset()         { *m = GetGlyfsIndexResult{} }
func (m *GetGlyfsIndexResult) String() string { return proto.CompactTextString(m) }
func (*GetGlyfsIndexResult) ProtoMessage()    {}
func (*GetGlyfsIndexResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{11}
}

func (m *GetGlyfsIndexResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGlyfsIndexResult.Unmarshal(m, b)
}
func (m *GetGlyfsIndexResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGlyfsIndexResult.Marshal(b, m, deterministic)
}
func (m *GetGlyfsIndexResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlyfsIndexResult.Merge(m, src)
}
func (m *GetGlyfsIndexResult) XXX_Size() int {
	return xxx_messageInfo_GetGlyfsIndexResult.Size(m)
}
func (m *GetGlyfsIndexResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlyfsIndexResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlyfsIndexResult proto.InternalMessageInfo

func (m *GetGlyfsIndexResult) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *GetGlyfsIndexResult) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetGlyfsUnicodeRequest struct {
	Apikey               string   `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty" bson:"apikey,omitempty"`
	FontId               uint32   `protobuf:"varint,2,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty" bson:"font_id,omitempty"`
	Unicode              uint32   `protobuf:"varint,3,opt,name=unicode,proto3" json:"unicode,omitempty" bson:"unicode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetGlyfsUnicodeRequest) Reset()         { *m = GetGlyfsUnicodeRequest{} }
func (m *GetGlyfsUnicodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetGlyfsUnicodeRequest) ProtoMessage()    {}
func (*GetGlyfsUnicodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{12}
}

func (m *GetGlyfsUnicodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGlyfsUnicodeRequest.Unmarshal(m, b)
}
func (m *GetGlyfsUnicodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGlyfsUnicodeRequest.Marshal(b, m, deterministic)
}
func (m *GetGlyfsUnicodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlyfsUnicodeRequest.Merge(m, src)
}
func (m *GetGlyfsUnicodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetGlyfsUnicodeRequest.Size(m)
}
func (m *GetGlyfsUnicodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlyfsUnicodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlyfsUnicodeRequest proto.InternalMessageInfo

func (m *GetGlyfsUnicodeRequest) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

func (m *GetGlyfsUnicodeRequest) GetFontId() uint32 {
	if m != nil {
		return m.FontId
	}
	return 0
}

func (m *GetGlyfsUnicodeRequest) GetUnicode() uint32 {
	if m != nil {
		return m.Unicode
	}
	return 0
}

type GetGlyfsUnicodeResult struct {
	Unicode              uint32                 `protobuf:"varint,1,opt,name=unicode,proto3" json:"unicode,omitempty" bson:"unicode,omitempty"`
	Datas                []*GetGlyfsIndexResult `protobuf:"bytes,2,rep,name=datas,proto3" json:"datas,omitempty" bson:"datas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-" bson:"-"`
	XXX_unrecognized     []byte                 `json:"-" bson:"-"`
	XXX_sizecache        int32                  `json:"-" bson:"-"`
}

func (m *GetGlyfsUnicodeResult) Reset()         { *m = GetGlyfsUnicodeResult{} }
func (m *GetGlyfsUnicodeResult) String() string { return proto.CompactTextString(m) }
func (*GetGlyfsUnicodeResult) ProtoMessage()    {}
func (*GetGlyfsUnicodeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{13}
}

func (m *GetGlyfsUnicodeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGlyfsUnicodeResult.Unmarshal(m, b)
}
func (m *GetGlyfsUnicodeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGlyfsUnicodeResult.Marshal(b, m, deterministic)
}
func (m *GetGlyfsUnicodeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGlyfsUnicodeResult.Merge(m, src)
}
func (m *GetGlyfsUnicodeResult) XXX_Size() int {
	return xxx_messageInfo_GetGlyfsUnicodeResult.Size(m)
}
func (m *GetGlyfsUnicodeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGlyfsUnicodeResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetGlyfsUnicodeResult proto.InternalMessageInfo

func (m *GetGlyfsUnicodeResult) GetUnicode() uint32 {
	if m != nil {
		return m.Unicode
	}
	return 0
}

func (m *GetGlyfsUnicodeResult) GetDatas() []*GetGlyfsIndexResult {
	if m != nil {
		return m.Datas
	}
	return nil
}

type GetMultGlyfsUnicodeRequest struct {
	Apikey               string   `protobuf:"bytes,1,opt,name=apikey,proto3" json:"apikey,omitempty" bson:"apikey,omitempty"`
	FontId               uint32   `protobuf:"varint,2,opt,name=font_id,json=fontId,proto3" json:"font_id,omitempty" bson:"font_id,omitempty"`
	Unicode              []uint32 `protobuf:"varint,3,rep,packed,name=unicode,proto3" json:"unicode,omitempty" bson:"unicode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"-"`
	XXX_unrecognized     []byte   `json:"-" bson:"-"`
	XXX_sizecache        int32    `json:"-" bson:"-"`
}

func (m *GetMultGlyfsUnicodeRequest) Reset()         { *m = GetMultGlyfsUnicodeRequest{} }
func (m *GetMultGlyfsUnicodeRequest) String() string { return proto.CompactTextString(m) }
func (*GetMultGlyfsUnicodeRequest) ProtoMessage()    {}
func (*GetMultGlyfsUnicodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{14}
}

func (m *GetMultGlyfsUnicodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultGlyfsUnicodeRequest.Unmarshal(m, b)
}
func (m *GetMultGlyfsUnicodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultGlyfsUnicodeRequest.Marshal(b, m, deterministic)
}
func (m *GetMultGlyfsUnicodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultGlyfsUnicodeRequest.Merge(m, src)
}
func (m *GetMultGlyfsUnicodeRequest) XXX_Size() int {
	return xxx_messageInfo_GetMultGlyfsUnicodeRequest.Size(m)
}
func (m *GetMultGlyfsUnicodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultGlyfsUnicodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultGlyfsUnicodeRequest proto.InternalMessageInfo

func (m *GetMultGlyfsUnicodeRequest) GetApikey() string {
	if m != nil {
		return m.Apikey
	}
	return ""
}

func (m *GetMultGlyfsUnicodeRequest) GetFontId() uint32 {
	if m != nil {
		return m.FontId
	}
	return 0
}

func (m *GetMultGlyfsUnicodeRequest) GetUnicode() []uint32 {
	if m != nil {
		return m.Unicode
	}
	return nil
}

type GetMultGlyfsUnicodeResult struct {
	Items                []*GetGlyfsUnicodeResult `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" bson:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-" bson:"-"`
	XXX_unrecognized     []byte                   `json:"-" bson:"-"`
	XXX_sizecache        int32                    `json:"-" bson:"-"`
}

func (m *GetMultGlyfsUnicodeResult) Reset()         { *m = GetMultGlyfsUnicodeResult{} }
func (m *GetMultGlyfsUnicodeResult) String() string { return proto.CompactTextString(m) }
func (*GetMultGlyfsUnicodeResult) ProtoMessage()    {}
func (*GetMultGlyfsUnicodeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e04e5ea2200a7886, []int{15}
}

func (m *GetMultGlyfsUnicodeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMultGlyfsUnicodeResult.Unmarshal(m, b)
}
func (m *GetMultGlyfsUnicodeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMultGlyfsUnicodeResult.Marshal(b, m, deterministic)
}
func (m *GetMultGlyfsUnicodeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMultGlyfsUnicodeResult.Merge(m, src)
}
func (m *GetMultGlyfsUnicodeResult) XXX_Size() int {
	return xxx_messageInfo_GetMultGlyfsUnicodeResult.Size(m)
}
func (m *GetMultGlyfsUnicodeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMultGlyfsUnicodeResult.DiscardUnknown(m)
}

var xxx_messageInfo_GetMultGlyfsUnicodeResult proto.InternalMessageInfo

func (m *GetMultGlyfsUnicodeResult) GetItems() []*GetGlyfsUnicodeResult {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*FontListRequest)(nil), "webfontsdk.FontListRequest")
	proto.RegisterType((*FontListResult)(nil), "webfontsdk.FontListResult")
	proto.RegisterMapType((map[uint32]int64)(nil), "webfontsdk.FontListResult.FontsEntry")
	proto.RegisterType((*FontBuildRequest)(nil), "webfontsdk.FontBuildRequest")
	proto.RegisterType((*MultFontBuildRequest)(nil), "webfontsdk.MultFontBuildRequest")
	proto.RegisterType((*FontBuildBufResult)(nil), "webfontsdk.FontBuildBufResult")
	proto.RegisterType((*MultFontBuildBufResult)(nil), "webfontsdk.MultFontBuildBufResult")
	proto.RegisterType((*GetProfileWithoutMapRequest)(nil), "webfontsdk.GetProfileWithoutMapRequest")
	proto.RegisterType((*GetProfileWithoutMapResult)(nil), "webfontsdk.GetProfileWithoutMapResult")
	proto.RegisterType((*GetUnicodeIndexsRequest)(nil), "webfontsdk.GetUnicodeIndexsRequest")
	proto.RegisterType((*GetUnicodeIndexsResult)(nil), "webfontsdk.GetUnicodeIndexsResult")
	proto.RegisterType((*GetGlyfsIndexRequest)(nil), "webfontsdk.GetGlyfsIndexRequest")
	proto.RegisterType((*GetGlyfsIndexResult)(nil), "webfontsdk.GetGlyfsIndexResult")
	proto.RegisterType((*GetGlyfsUnicodeRequest)(nil), "webfontsdk.GetGlyfsUnicodeRequest")
	proto.RegisterType((*GetGlyfsUnicodeResult)(nil), "webfontsdk.GetGlyfsUnicodeResult")
	proto.RegisterType((*GetMultGlyfsUnicodeRequest)(nil), "webfontsdk.GetMultGlyfsUnicodeRequest")
	proto.RegisterType((*GetMultGlyfsUnicodeResult)(nil), "webfontsdk.GetMultGlyfsUnicodeResult")
}

func init() { proto.RegisterFile("webfont.proto", fileDescriptor_e04e5ea2200a7886) }

var fileDescriptor_e04e5ea2200a7886 = []byte{
	// 817 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x4e, 0xdb, 0x4a,
	0x10, 0x8e, 0x13, 0xf2, 0x37, 0xc4, 0x07, 0xce, 0x92, 0x13, 0x8c, 0x39, 0x94, 0x74, 0x11, 0x6d,
	0x7a, 0x13, 0x55, 0x69, 0xab, 0xa2, 0xf6, 0xa2, 0x52, 0xaa, 0x10, 0xd1, 0x16, 0x84, 0x2c, 0xda,
	0x48, 0x95, 0x50, 0x14, 0xe2, 0x35, 0x58, 0x24, 0x76, 0x6a, 0xaf, 0x81, 0x3c, 0x41, 0x9f, 0xa0,
	0x0f, 0xd5, 0x57, 0xe8, 0xd3, 0x54, 0x3b, 0x76, 0x12, 0xdb, 0x71, 0x88, 0x84, 0xda, 0x3b, 0xcf,
	0x7e, 0xdf, 0xfc, 0xec, 0xe7, 0x99, 0xb1, 0x41, 0xbe, 0x65, 0x17, 0x86, 0x6d, 0xf1, 0xfa, 0xc8,
	0xb1, 0xb9, 0x4d, 0x20, 0x30, 0x5d, 0xfd, 0x9a, 0x3e, 0x83, 0xb5, 0x43, 0xdb, 0xe2, 0x9f, 0x4c,
	0x97, 0x6b, 0xec, 0x9b, 0xc7, 0x5c, 0x4e, 0x2a, 0x90, 0xeb, 0x8d, 0xcc, 0x6b, 0x36, 0x56, 0xa4,
	0xaa, 0x54, 0x2b, 0x6a, 0x81, 0x45, 0xbf, 0x4b, 0xf0, 0xcf, 0x8c, 0xeb, 0x7a, 0x03, 0x4e, 0xde,
	0x42, 0x16, 0x03, 0x29, 0x52, 0x35, 0x53, 0x5b, 0x6d, 0xec, 0xd7, 0x67, 0x91, 0xeb, 0x51, 0x2a,
	0x9a, 0x6e, 0xcb, 0xe2, 0xce, 0x58, 0xf3, 0x7d, 0xd4, 0x03, 0x80, 0xd9, 0x21, 0x59, 0x87, 0xcc,
	0x24, 0xa5, 0xac, 0x89, 0x47, 0x52, 0x86, 0xec, 0x4d, 0x6f, 0xe0, 0x31, 0x25, 0x5d, 0x95, 0x6a,
	0x19, 0xcd, 0x37, 0xde, 0xa4, 0x0f, 0x24, 0xfa, 0x53, 0x82, 0x75, 0xe1, 0xda, 0xf4, 0xcc, 0x81,
	0xbe, 0xa4, 0x6c, 0xb2, 0x09, 0x79, 0x91, 0xaf, 0x6b, 0xea, 0x18, 0x48, 0xd6, 0x72, 0xc2, 0x3c,
	0xd2, 0x09, 0x81, 0x15, 0xce, 0xee, 0xb8, 0x92, 0x41, 0x3a, 0x3e, 0x93, 0x2d, 0x28, 0x58, 0x8c,
	0xe9, 0x5d, 0xce, 0x0d, 0x65, 0xa5, 0x2a, 0xd5, 0x0a, 0x5a, 0x5e, 0xd8, 0x67, 0xdc, 0x98, 0x42,
	0xcc, 0xe6, 0x4a, 0x76, 0x06, 0xb5, 0x6c, 0x4e, 0xb6, 0xa1, 0x88, 0xd0, 0xad, 0x6d, 0x18, 0x4a,
	0x0e, 0x31, 0xe4, 0x76, 0x6c, 0xc3, 0x20, 0x3b, 0x00, 0x53, 0xb0, 0xa1, 0xe4, 0x11, 0x2d, 0x4e,
	0xd0, 0x06, 0xfd, 0x00, 0xe5, 0x63, 0x6f, 0xc0, 0xe7, 0xae, 0xd3, 0x80, 0xac, 0xc9, 0xd9, 0x70,
	0x22, 0xed, 0xff, 0x71, 0x69, 0xc3, 0x64, 0xcd, 0xa7, 0xd2, 0x1f, 0x69, 0x20, 0x53, 0xac, 0xe9,
	0x19, 0xc1, 0x5b, 0x0a, 0x29, 0x20, 0x45, 0x14, 0xa8, 0xc3, 0x06, 0x02, 0x86, 0xed, 0x0c, 0x7b,
	0xbc, 0x7b, 0xc3, 0x1c, 0xd7, 0xb4, 0xad, 0x40, 0xa6, 0x7f, 0x05, 0x74, 0x88, 0xc8, 0x17, 0x1f,
	0x20, 0x7b, 0x20, 0x23, 0xbf, 0x7f, 0xc5, 0xfa, 0xd7, 0xae, 0x37, 0x44, 0xe9, 0x64, 0xad, 0x24,
	0x0e, 0xdf, 0x07, 0x67, 0x22, 0x9b, 0xd5, 0x1b, 0xb2, 0x2e, 0xb3, 0x50, 0xc1, 0xa2, 0x96, 0x13,
	0x66, 0xcb, 0x12, 0x2a, 0x5d, 0x8c, 0x39, 0x73, 0x51, 0x5c, 0xa1, 0x60, 0x49, 0x2b, 0xe0, 0x81,
	0x50, 0x77, 0x0a, 0x0a, 0x79, 0x73, 0x21, 0x50, 0xe8, 0xbb, 0x03, 0xe0, 0x83, 0x28, 0x70, 0x1e,
	0x51, 0x9f, 0x8e, 0x0a, 0xef, 0xc2, 0xea, 0x0c, 0x6e, 0x28, 0x05, 0xc4, 0x61, 0x8a, 0x37, 0xe8,
	0x09, 0x54, 0x22, 0x1a, 0xcf, 0xa4, 0x79, 0x19, 0x55, 0xf9, 0x51, 0xa2, 0xca, 0x53, 0xfa, 0x44,
	0xe7, 0x13, 0xd8, 0x6e, 0x33, 0x7e, 0xea, 0xd8, 0x86, 0x39, 0x60, 0x1d, 0x93, 0x5f, 0xd9, 0x1e,
	0x3f, 0xee, 0x8d, 0x1e, 0xda, 0x89, 0xf4, 0x08, 0xd4, 0xe4, 0x78, 0xf7, 0xbf, 0x3e, 0x02, 0x2b,
	0x7a, 0x8f, 0xf7, 0x30, 0x58, 0x49, 0xc3, 0x67, 0xaa, 0xc3, 0x66, 0x9b, 0xf1, 0xcf, 0x96, 0xd9,
	0xb7, 0x75, 0x76, 0x64, 0xe9, 0xec, 0xce, 0x7d, 0xf0, 0x80, 0x28, 0x90, 0xf7, 0xfc, 0x40, 0xc1,
	0x8b, 0x9e, 0x98, 0xf4, 0x39, 0x54, 0xe6, 0xb3, 0x60, 0xb1, 0x15, 0xc8, 0x99, 0x68, 0xa3, 0xa2,
	0xb2, 0x16, 0x58, 0xf4, 0x1c, 0xca, 0x6d, 0xc6, 0xdb, 0x83, 0xb1, 0xe1, 0x22, 0xff, 0xc1, 0x45,
	0x95, 0x21, 0x8b, 0x21, 0x83, 0x92, 0x7c, 0x83, 0xbe, 0x83, 0x8d, 0x58, 0x78, 0xac, 0x66, 0x4a,
	0x96, 0x42, 0xe4, 0x44, 0xdd, 0xfa, 0x78, 0x23, 0x0c, 0x10, 0x5c, 0xeb, 0x2f, 0xc8, 0x76, 0x05,
	0xff, 0xcd, 0x25, 0xc1, 0x3a, 0x43, 0x2e, 0x52, 0xc4, 0x85, 0xbc, 0x82, 0xac, 0xa8, 0xcf, 0x55,
	0xd2, 0xd8, 0xa0, 0xbb, 0xe1, 0x06, 0x4d, 0xb8, 0xb1, 0xe6, 0xb3, 0xe9, 0x25, 0x76, 0x94, 0x68,
	0xfa, 0x3f, 0x7f, 0xa5, 0x4c, 0xf8, 0x4a, 0x67, 0xb0, 0x95, 0x98, 0x08, 0xaf, 0xf5, 0x3a, 0x3a,
	0x5d, 0x8f, 0x93, 0x8a, 0x8f, 0x78, 0x04, 0x03, 0xd6, 0xf8, 0x95, 0x85, 0x7c, 0xdb, 0x61, 0x8c,
	0x33, 0x87, 0x7c, 0x84, 0x22, 0x4e, 0xa1, 0x18, 0x47, 0x72, 0xef, 0x1a, 0x54, 0x97, 0x8c, 0x2f,
	0x4d, 0x91, 0x0e, 0xc8, 0xa2, 0xd6, 0x59, 0xc0, 0x6a, 0xd8, 0x25, 0x69, 0x11, 0xab, 0x74, 0x21,
	0x23, 0x1c, 0xb8, 0x05, 0x85, 0xc9, 0x07, 0x8f, 0x6c, 0x27, 0x7f, 0x06, 0xfd, 0x70, 0xea, 0xe2,
	0x6f, 0x24, 0x4d, 0x11, 0x13, 0xc7, 0x64, 0x6e, 0x13, 0x90, 0xa7, 0x31, 0xe9, 0x16, 0xed, 0x1e,
	0xf5, 0xc9, 0x72, 0x62, 0x90, 0xea, 0x1c, 0xd6, 0xe3, 0x33, 0x4c, 0xf6, 0x62, 0xde, 0x49, 0x7b,
	0x24, 0x2a, 0x48, 0xf2, 0x1a, 0xa0, 0x29, 0x72, 0x06, 0x72, 0xa4, 0x3f, 0xa3, 0x4a, 0x27, 0xed,
	0x02, 0x75, 0x59, 0x73, 0xd3, 0x14, 0xf9, 0x0a, 0x6b, 0xb1, 0xc6, 0x21, 0xf4, 0xde, 0xae, 0xf2,
	0x23, 0x2f, 0xef, 0x3c, 0x9a, 0x22, 0x06, 0xee, 0x90, 0x78, 0x2b, 0x93, 0xb8, 0xa2, 0x0b, 0x86,
	0x4a, 0xdd, 0x5f, 0xca, 0xf3, 0xf3, 0x34, 0xf7, 0x61, 0xc3, 0xb4, 0xeb, 0x97, 0xce, 0xa8, 0x5f,
	0x17, 0xd4, 0xc0, 0xab, 0x59, 0xea, 0xf8, 0x0f, 0xa7, 0xe2, 0x1f, 0xed, 0x54, 0xba, 0xc8, 0xe1,
	0xcf, 0xda, 0x8b, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa8, 0xf0, 0xeb, 0xcf, 0xbd, 0x09, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	//BuildFont
	BuildFont(ctx context.Context, in *FontBuildRequest, opts ...grpc.CallOption) (*FontBuildBufResult, error)
	//MultBuildFont
	MultBuildFont(ctx context.Context, in *MultFontBuildRequest, opts ...grpc.CallOption) (*MultFontBuildBufResult, error)
	//Get my fontlist
	FontList(ctx context.Context, in *FontListRequest, opts ...grpc.CallOption) (*FontListResult, error)
	//GetProfile
	GetProfileWithoutMap(ctx context.Context, in *GetProfileWithoutMapRequest, opts ...grpc.CallOption) (*GetProfileWithoutMapResult, error)
	//GetUnicodeIndexs
	GetUnicodeIndexs(ctx context.Context, in *GetUnicodeIndexsRequest, opts ...grpc.CallOption) (*GetUnicodeIndexsResult, error)
	//GetGlyfs Index
	GetGlyfsIndex(ctx context.Context, in *GetGlyfsIndexRequest, opts ...grpc.CallOption) (*GetGlyfsIndexResult, error)
	//GetGlyfs Unicode
	GetGlyfsUnicode(ctx context.Context, in *GetGlyfsUnicodeRequest, opts ...grpc.CallOption) (*GetGlyfsUnicodeResult, error)
	//GetMultGlyfsUnicode
	GetMultGlyfsUnicode(ctx context.Context, in *GetMultGlyfsUnicodeRequest, opts ...grpc.CallOption) (*GetMultGlyfsUnicodeResult, error)
}

type greeterClient struct {
	cc *grpc.ClientConn
}

func NewGreeterClient(cc *grpc.ClientConn) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) BuildFont(ctx context.Context, in *FontBuildRequest, opts ...grpc.CallOption) (*FontBuildBufResult, error) {
	out := new(FontBuildBufResult)
	err := c.cc.Invoke(ctx, "/webfontsdk.Greeter/BuildFont", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) MultBuildFont(ctx context.Context, in *MultFontBuildRequest, opts ...grpc.CallOption) (*MultFontBuildBufResult, error) {
	out := new(MultFontBuildBufResult)
	err := c.cc.Invoke(ctx, "/webfontsdk.Greeter/MultBuildFont", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) FontList(ctx context.Context, in *FontListRequest, opts ...grpc.CallOption) (*FontListResult, error) {
	out := new(FontListResult)
	err := c.cc.Invoke(ctx, "/webfontsdk.Greeter/FontList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetProfileWithoutMap(ctx context.Context, in *GetProfileWithoutMapRequest, opts ...grpc.CallOption) (*GetProfileWithoutMapResult, error) {
	out := new(GetProfileWithoutMapResult)
	err := c.cc.Invoke(ctx, "/webfontsdk.Greeter/GetProfileWithoutMap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetUnicodeIndexs(ctx context.Context, in *GetUnicodeIndexsRequest, opts ...grpc.CallOption) (*GetUnicodeIndexsResult, error) {
	out := new(GetUnicodeIndexsResult)
	err := c.cc.Invoke(ctx, "/webfontsdk.Greeter/GetUnicodeIndexs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetGlyfsIndex(ctx context.Context, in *GetGlyfsIndexRequest, opts ...grpc.CallOption) (*GetGlyfsIndexResult, error) {
	out := new(GetGlyfsIndexResult)
	err := c.cc.Invoke(ctx, "/webfontsdk.Greeter/GetGlyfsIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetGlyfsUnicode(ctx context.Context, in *GetGlyfsUnicodeRequest, opts ...grpc.CallOption) (*GetGlyfsUnicodeResult, error) {
	out := new(GetGlyfsUnicodeResult)
	err := c.cc.Invoke(ctx, "/webfontsdk.Greeter/GetGlyfsUnicode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) GetMultGlyfsUnicode(ctx context.Context, in *GetMultGlyfsUnicodeRequest, opts ...grpc.CallOption) (*GetMultGlyfsUnicodeResult, error) {
	out := new(GetMultGlyfsUnicodeResult)
	err := c.cc.Invoke(ctx, "/webfontsdk.Greeter/GetMultGlyfsUnicode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	//BuildFont
	BuildFont(context.Context, *FontBuildRequest) (*FontBuildBufResult, error)
	//MultBuildFont
	MultBuildFont(context.Context, *MultFontBuildRequest) (*MultFontBuildBufResult, error)
	//Get my fontlist
	FontList(context.Context, *FontListRequest) (*FontListResult, error)
	//GetProfile
	GetProfileWithoutMap(context.Context, *GetProfileWithoutMapRequest) (*GetProfileWithoutMapResult, error)
	//GetUnicodeIndexs
	GetUnicodeIndexs(context.Context, *GetUnicodeIndexsRequest) (*GetUnicodeIndexsResult, error)
	//GetGlyfs Index
	GetGlyfsIndex(context.Context, *GetGlyfsIndexRequest) (*GetGlyfsIndexResult, error)
	//GetGlyfs Unicode
	GetGlyfsUnicode(context.Context, *GetGlyfsUnicodeRequest) (*GetGlyfsUnicodeResult, error)
	//GetMultGlyfsUnicode
	GetMultGlyfsUnicode(context.Context, *GetMultGlyfsUnicodeRequest) (*GetMultGlyfsUnicodeResult, error)
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_BuildFont_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FontBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).BuildFont(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webfontsdk.Greeter/BuildFont",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).BuildFont(ctx, req.(*FontBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_MultBuildFont_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultFontBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).MultBuildFont(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webfontsdk.Greeter/MultBuildFont",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).MultBuildFont(ctx, req.(*MultFontBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_FontList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FontListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).FontList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webfontsdk.Greeter/FontList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).FontList(ctx, req.(*FontListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetProfileWithoutMap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProfileWithoutMapRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetProfileWithoutMap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webfontsdk.Greeter/GetProfileWithoutMap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetProfileWithoutMap(ctx, req.(*GetProfileWithoutMapRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetUnicodeIndexs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUnicodeIndexsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetUnicodeIndexs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webfontsdk.Greeter/GetUnicodeIndexs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetUnicodeIndexs(ctx, req.(*GetUnicodeIndexsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetGlyfsIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGlyfsIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetGlyfsIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webfontsdk.Greeter/GetGlyfsIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetGlyfsIndex(ctx, req.(*GetGlyfsIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetGlyfsUnicode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGlyfsUnicodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetGlyfsUnicode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webfontsdk.Greeter/GetGlyfsUnicode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetGlyfsUnicode(ctx, req.(*GetGlyfsUnicodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_GetMultGlyfsUnicode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMultGlyfsUnicodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).GetMultGlyfsUnicode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webfontsdk.Greeter/GetMultGlyfsUnicode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).GetMultGlyfsUnicode(ctx, req.(*GetMultGlyfsUnicodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "webfontsdk.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildFont",
			Handler:    _Greeter_BuildFont_Handler,
		},
		{
			MethodName: "MultBuildFont",
			Handler:    _Greeter_MultBuildFont_Handler,
		},
		{
			MethodName: "FontList",
			Handler:    _Greeter_FontList_Handler,
		},
		{
			MethodName: "GetProfileWithoutMap",
			Handler:    _Greeter_GetProfileWithoutMap_Handler,
		},
		{
			MethodName: "GetUnicodeIndexs",
			Handler:    _Greeter_GetUnicodeIndexs_Handler,
		},
		{
			MethodName: "GetGlyfsIndex",
			Handler:    _Greeter_GetGlyfsIndex_Handler,
		},
		{
			MethodName: "GetGlyfsUnicode",
			Handler:    _Greeter_GetGlyfsUnicode_Handler,
		},
		{
			MethodName: "GetMultGlyfsUnicode",
			Handler:    _Greeter_GetMultGlyfsUnicode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webfont.proto",
}
