# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import webfont_pb2 as webfont__pb2


class GreeterStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.BuildFont = channel.unary_unary(
        '/webfontsdk.Greeter/BuildFont',
        request_serializer=webfont__pb2.FontBuildRequest.SerializeToString,
        response_deserializer=webfont__pb2.FontBuildBufResult.FromString,
        )
    self.MultBuildFont = channel.unary_unary(
        '/webfontsdk.Greeter/MultBuildFont',
        request_serializer=webfont__pb2.MultFontBuildRequest.SerializeToString,
        response_deserializer=webfont__pb2.MultFontBuildBufResult.FromString,
        )
    self.FontList = channel.unary_unary(
        '/webfontsdk.Greeter/FontList',
        request_serializer=webfont__pb2.FontListRequet.SerializeToString,
        response_deserializer=webfont__pb2.FontListResult.FromString,
        )


class GreeterServicer(object):
  """The greeting service definition.
  """

  def BuildFont(self, request, context):
    """单字体生成
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MultBuildFont(self, request, context):
    """多请求混合
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FontList(self, request, context):
    """获得字体列表
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'BuildFont': grpc.unary_unary_rpc_method_handler(
          servicer.BuildFont,
          request_deserializer=webfont__pb2.FontBuildRequest.FromString,
          response_serializer=webfont__pb2.FontBuildBufResult.SerializeToString,
      ),
      'MultBuildFont': grpc.unary_unary_rpc_method_handler(
          servicer.MultBuildFont,
          request_deserializer=webfont__pb2.MultFontBuildRequest.FromString,
          response_serializer=webfont__pb2.MultFontBuildBufResult.SerializeToString,
      ),
      'FontList': grpc.unary_unary_rpc_method_handler(
          servicer.FontList,
          request_deserializer=webfont__pb2.FontListRequet.FromString,
          response_serializer=webfont__pb2.FontListResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'webfontsdk.Greeter', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
